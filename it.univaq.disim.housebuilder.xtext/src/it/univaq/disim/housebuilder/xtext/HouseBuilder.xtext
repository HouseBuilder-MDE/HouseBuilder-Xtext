// automatically generated by Xtext
grammar it.univaq.disim.housebuilder.xtext.HouseBuilder with org.eclipse.xtext.common.Terminals

import "http://it.univaq.disim/housebuilderV2" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

House returns House:
	'House'
	name=EString
	'{'
		('state' state=EString)?
		('province' province=EString)?
		('city' city=EString)?
		('postalCode' postalCode=EString)?
		('address' address=EString)?
		('buildingDate' buildingDate=EDate)?
		'floors' '{' floors+=Floor ( "," floors+=Floor)* '}' 
		'entrances' '{' entrances+=Entrance ( "," entrances+=Entrance)* '}' 
		('passages' '{' passages+=Passage ( "," passages+=Passage)* '}' )?
		('controllers' '{' controllers+=Controller ( "," controllers+=Controller)* '}' )?

	'}';


Space returns Space:
	Room | ExternalSpace;


EString returns ecore::EString:
	STRING | ID;

EDate returns ecore::EDate:
	STRING /* TODO: implement this rule and an appropriate IValueConverter */;

Floor returns Floor:
	'Floor'
	name=EString
	'{'
		'level' level=EInt
		'spaces' '{' spaces+=Space ( "," spaces+=Space)* '}' 
	'}';

Passage returns Passage:
	'Passage'
	name=EString
	'{'
		('doorType' doorType=DoorType)?
		('doorsNumber' doorsNumber=EInt)?
		('WxH:' height=EFloat 'x' width=EFloat )?
		'spaceA' spaceA=[Space|EString]
		'spaceB' spaceB=[Space|EString]
		('devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
	'}';

Controller returns Controller:
	'Controller'
	name=EString
	'{'
		('model' model=EString)?
		('os' os=EString)?
		('osVersion' osVersion=EString)?
		'actuators' '{' actuators+=Actuator ( "," actuators+=Actuator)* '}' 
		'sensors' '{' sensors+=Sensor ( "," sensors+=Sensor)* '}' 
	'}';

Entrance returns Entrance:
	'Entrance'
	name=EString
	'{'
		('doorType' doorType=DoorType)?
		('doorsNumber' doorsNumber=EInt)?
		('WxH:' height=EFloat 'x' width=EFloat )?
		'space' space=[Space|EString]
		('devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

Device returns Device:
	{Device}
	'Device'
	name=EString
	'{'
		('type' type=DeviceType)?
		('model' model=EString)?
	'}';

Sensor returns Sensor:
	'Sensor'
	name=EString
	'{'
		('type' type=SensorType)?
		('value' value=EFloat)?
		('model' model=EString)?
		'space' space=[Space|EString]
	'}';

Room returns Room:
	'Room'
	name=EString
	'{'
		'LxHxW:' length=EFloat 'x' width=EFloat ('x' height=EFloat)?
		('roomType' roomType=RoomType)?
		('devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
		('windows' '{' windows+=Window ( "," windows+=Window)* '}' )?
	'}';

ExternalSpace returns ExternalSpace:
	'ExternalSpace'
	name=EString
	'{'
		'length' length=EFloat
		'width' width=EFloat
		'type' type=ExternalSpaceType
		('ground' ground=GroundType)?
		('devices' '{' devices+=Device ( "," devices+=Device)* '}' )?
	'}';

enum DeviceType returns DeviceType:
				THERMOSTAT = 'THERMOSTAT' | APPLIANCE = 'APPLIANCE' | SOCKET = 'SOCKET' | ROLLER_SHUTTERS = 'ROLLER_SHUTTERS' | GATE = 'GATE';

Actuator returns Actuator:
	'Actuator'
	name=EString
	'{'
		('type' type=ActuatorType)?
		('model' model=EString)?
		'device' device=[Device|EString]
	'}';

enum ActuatorType returns ActuatorType:
				IDRAULIC = 'IDRAULIC' | PNEUMATIC = 'PNEUMATIC' | ELECTRICAL = 'ELECTRICAL' | THERMAL = 'THERMAL' | MECHANICAL = 'MECHANICAL';

enum SensorType returns SensorType:
				TEMPERATURE = 'TEMPERATURE' | PRESSURE = 'PRESSURE' | PROXIMITY = 'PROXIMITY' | ACCELEROMETER = 'ACCELEROMETER' | GAS = 'GAS' | SMOKE = 'SMOKE' | VIDEO_SURVAILLANCE_CAMERA = 'VIDEO_SURVAILLANCE_CAMERA';

enum RoomType returns RoomType:
				SIMPLE = 'SIMPLE' | BATHROOM = 'BATHROOM' | LIVING_ROOM = 'LIVING_ROOM' | BEDROOM = 'BEDROOM' | HALLWAY = 'HALLWAY' | STUDY = 'STUDY' | ENTRANCE = 'ENTRANCE' | STORAGE_ROOM = 'STORAGE_ROOM' | GARAGE = 'GARAGE' | LAUNDRY_ROOM = 'LAUNDRY_ROOM' | HOBBY_ROOM = 'HOBBY_ROOM' | CELLAR = 'CELLAR' | LUNCHROOM = 'LUNCHROOM' | RUMPUS_ROOM = 'RUMPUS_ROOM' | STAIRS = 'STAIRS' | KITCHEN = 'KITCHEN';

Window returns Window:
	{Window}
	'Window'
	name=EString
	'{'
		('doorsNumber' doorsNumber=EInt)?
		('WxH:' height=EFloat 'x' width=EFloat )?
	'}';

enum ExternalSpaceType returns ExternalSpaceType:
				BALCONY = 'BALCONY' | GARDEN = 'GARDEN' | TERRACE = 'TERRACE';

enum GroundType returns GroundType:
				ASPALTH = 'ASPALTH' | TERRAIN = 'TERRAIN' | PAVING = 'PAVING';

enum DoorType returns DoorType:
				SIMPLE = 'SIMPLE' | DOOR_WINDOW = 'DOOR_WINDOW' | PANIC_DOOR = 'PANIC_DOOR' | ENTRANCE_DOOR = 'ENTRANCE_DOOR' | SLIDING_DOOR = 'SLIDING_DOOR' | GATE = 'GATE' | EMPTY = 'EMPTY';
